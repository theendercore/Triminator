import {
  BlobReader,
  BlobWriter,
  TextReader,
  ZipWriter,
} from "@zip.js/zip.js";
import {
  genArmorTrimJson,
  genTrimJson,
  genPackMeta,
  genLang,
  genArmorTrimsJson,
} from "./genJson";
import { format } from "./Util";

export async function genTrimDatapack(val: PackValues) {
  const zipWriter = new ZipWriter(new BlobWriter());
  await Promise.all([
    zipWriter.add(
      `pack.mcmeta`,
      new TextReader(
        format(genPackMeta(15, "Datapack generated By Triminator"))
      )
    ),

    zipWriter.add(
      `data/${val.namespace}/recipes/${val.name}_armor_trim.json`,
      new TextReader(format(genArmorTrimJson(val.item)))
    ),

    zipWriter.add(
      `data/${val.namespace}/trim_pattern/${val.name}.json`,
      new TextReader(
        format(genTrimJson(val.namespace, val.name, val.lang, val.item))
      )
    ),
  ]);

  return URL.createObjectURL(await zipWriter.close());
}

export async function genTrimResourcepack(val: PackValues) {
  const zipWriter = new ZipWriter(new BlobWriter());
  await Promise.all([
    zipWriter.add(
      "pack.mcmeta",
      new TextReader(
        format(genPackMeta(15, "Resource pack generated By Triminator"))
      )
    ),
    zipWriter.add(
      `assets/${val.namespace}/lang/en_us.json`,
      new TextReader(format(genLang(val.namespace, [val.name], [val.lang])))
    ),
    zipWriter.add(
      `assets/${val.namespace}/textures/trims/models/armor/${val.name}.png`,
      new BlobReader(val.baseTexture!)
    ),
    zipWriter.add(
      `assets/${val.namespace}/textures/trims/models/armor/${val.name}_leggings.png`,
      new BlobReader(val.legsTexture!)
    ),
    zipWriter.add(
      `assets/minecraft/atlases/armor_trims.json`,
      new TextReader(format(genArmorTrimsJson(val.namespace, [val.name])))
    ),
  ]);

  return URL.createObjectURL(await zipWriter.close());
}
