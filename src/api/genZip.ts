import { BlobWriter, TextReader, ZipWriter } from "@zip.js/zip.js";
import { genArmorTrimJson, genTrimJson, getPackMeta } from "./genJson";

const format = (obj: Object) => JSON.stringify(obj, null, 2);

export async function getTrimDatapack(val: DataPackValues) {
  const zipWriter = new ZipWriter(new BlobWriter());

  await zipWriter.add(
    `data/${val.namespace}/recipes/${val.name}_armor_trim.json`,
    new TextReader(
      format(genTrimJson(val.namespace, val.name, val.lang, val.item))
    )
  );

  await zipWriter.add(
    `data/${val.namespace}/trim_pattern/${val.name}.json`,
    new TextReader(format(genArmorTrimJson(val.item)))
  );

  await zipWriter.add(
    `pack.mcmeta`,
    new TextReader(format(getPackMeta(15, "Generated By Triminator")))
  );

  return await URL.createObjectURL(await zipWriter.close());
}